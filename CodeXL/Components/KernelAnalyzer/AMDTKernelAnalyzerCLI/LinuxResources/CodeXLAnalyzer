#!/bin/bash

# CodeXLAnalyzer requires bash. Do not remove the above shebang line!

# ----------------------------------------------------------------------------------------------------------------------------------
# File name: CodeXLAnalyzer
# This script sets CodeXLAnalyzer's related environment variables and 
# executed the CodeXLAnalyzer binary executable.
#
# (c) 2012 Advanced Micro Devices Inc. All Rights Reserved.
# ----------------------------------------------------------------------------------------------------------------------------------

# Get this script full path:
if echo "$0" | grep '^/' ; then
	thisScriptFullPath="$0"
else
	thisScriptFullPath=`pwd`/$0
fi

# Enable the use of symbolic links to the script
if [ -h ${thisScriptFullPath} ]
then
    LINKTARGET=`readlink -f "$thisScriptFullPath"`
    thisScriptFullPath=${LINKTARGET}
fi

# CodeXLAnalyzer's binaries directory is this scripts directory:
CodeXLAnalyzerBinariesDir=`dirname "$thisScriptFullPath"`

# Calculate CodeXLAnalyzer's binary executable path:
CodeXLAnalyzerBinaryExePath="${CodeXLAnalyzerBinariesDir}/CodeXLAnalyzer-bin"

# Obtain libstdc++ needed version
CRUNTIMEPATH=$(ldconfig -p | grep libstdc++.so.6 | grep 64)
if [ -z "$CRUNTIMEPATH" ] ; then
   CRUNTIMEPATH=$(/sbin/ldconfig -p | grep libstdc++.so.6 | grep 64)
fi
CRUNTIMEFILE=${CRUNTIMEPATH##*>}
# Test if current system C++ runtime is older from CodeXL version needed
CXL_CLIB=""
NEWCRUNTIME=$(strings $CRUNTIMEFILE | grep GLIBCXX_3.4.16)
if [ -z "$NEWCRUNTIME" ];then
    # System C++ runtime is older from CodeXL
    CXL_CLIB="${CodeXLAnalyzerBinariesDir}/RuntimeLibs"
fi

# Add CodeXLAnalyzer's binaries directory to LD_LIBRARY_PATH:
if [ -z "$LD_LIBRARY_PATH" ]; then
	export LD_LIBRARY_PATH="${CodeXLAnalyzerBinariesDir}:${CXL_CLIB}"
else
	export LD_LIBRARY_PATH="${CodeXLAnalyzerBinariesDir}:${CXL_CLIB}:$LD_LIBRARY_PATH"
fi

# Run CodeXL:
eval "$CodeXLAnalyzerBinaryExePath $@"

